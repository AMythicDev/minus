image: "rust:latest"

variables:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

default:
  before_script:
    - rustc --version

workflow:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - when: never

stages:
  - checks
  - release

check-code-fmt:
  stage: checks
  script:
    - rustup component add rustfmt
    - cargo fmt --all -- --check

build-code:
  stage: checks
  script:
    - cargo build --verbose --all-features
  
tests:
  stage: checks
  script:
    - cargo test --verbose --all-features --no-run
    - cargo test --verbose --all-features

examples:
  stage: checks
  script:
    - cargo check --example=dyn_tokio --features=async_output
    - cargo check --example=dyn_async_std --features=async_output
    - cargo check --example=static --features=static_output
    - cargo check --example=large_lines --features=static_output

lint-stable:
  stage: checks
  script:
    - rustup component add clippy
    - cargo clippy --all-features --tests --examples

lint-nightly:
  image: "rustlang/rust:nightly"
  stage: checks
  allow_failure: true
  script:
    - rustup component add clippy
    - cargo clippy --all-features --tests --examples

release:
  stage: release
  rules:
    - if: '$CI_COMMIT_REF_NAME == "release"'
      when: always
    - when: never
  script:
    - 'cargo publish --token "$CRATES_IO_TOKEN"'
